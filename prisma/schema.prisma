// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  company                 String?
  scheduledArrival        DateTime?
  reserveAdultsCount      Int      @default(0)
  reserveChildrenCount    Int      @default(0)
  changedAdultsCount      Int      @default(0)
  changedChildrenCount    Int      @default(0)
  taxiReservation         String @default("Unconfirmed")
  arrivals  Arrival[]
  meal      Meal?
  taxis     Taxi[]
  inCharges RoomInCharge[]
}

model InCharge {
  id       Int       @id @default(autoincrement())
  name     String
  arrivals RoomInCharge[]
}

model RoomInCharge {
  roomId     Int
  inChargeId Int
  inCharge   InCharge   @relation(fields: [inChargeId], references: [id])
  room       Room       @relation(fields: [roomId], references: [id])

  @@id([roomId, inChargeId])
}

model Arrival {
  id                      Int      @id @default(autoincrement())
  adultsCount             Int      @default(0)
  childrenCount           Int      @default(0)
  arrivalTime             DateTime @default(now())
  room                    Room     @relation(fields: [roomId], references: [id])
  roomId                  Int      
}

model Meal {
  id             Int               @id @default(autoincrement())
  startTime      DateTime?
  hasStarted     Boolean           @default(false)
  hasPremiumMenu String            @default("")
  paymentMethod  String?
  isPaid         String            @default("")
  hasLostItem    Boolean           @default(false)
  room           Room              @relation(fields: [roomId], references: [id])
  roomId         Int               @unique
}


model Taxi {
  id              Int          @id @default(autoincrement())
  peopleCount     Int?         @default(0)
  reservationTime DateTime?
  afterEvent      Boolean      @default(false)
  taxiCompany     String       @default("")
  memo            String       @default("")
  isCompleted     Boolean      @default(false)
  isCancel        Boolean      @default(false)
  isGeneralTaxi   Boolean      @default(false)
  generalTaxiId   Int?         @unique
  room            Room?        @relation(fields: [roomId], references: [id])
  roomId          Int?
  section         Int?
  column          Int?
  index           Int?
  hotPotatos      HotPotatos[]
}

model HotPotatos {
  id          Int         @id @default(autoincrement())
  name        String
  sex         String
  detail      String
  createdAt   DateTime    @default(now())
  taxi        Taxi        @relation(fields: [taxiId], references: [id])
  taxiId      Int         @unique
}